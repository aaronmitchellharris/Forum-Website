{"version":3,"sources":["Header.js","Comment.js","Post.js","Home.js","Categories.js","ImageSelector.js","CreatePost.js","Category.js","LoggedIn.js","SignUp.js","NotLoggedIn.js","User.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Navbar","bg","variant","Container","Brand","href","Nav","className","Link","as","to","Comment","props","useState","error","setError","isLoaded","setIsLoaded","item","setItem","URL","id","useEffect","fetch","then","res","json","result","console","log","message","user","username","Card","Text","content","Button","onClick","method","parent","setState","width","padding","Post","comments","setComments","self","updateUserPost","headers","body","JSON","stringify","obj","like","liked","hasOwnProperty","disliked","dislikes","likes","dislike","xs","Row","Col","md","span","Image","style","src","thumbnail","title","offset","category","Footer","Form","onSubmit","event","preventDefault","formData","FormData","target","formDataObj","Object","fromEntries","entries","list","Group","Control","placeholder","name","type","map","comment","setUser","isLogin","Home","Categories","items","setItems","results","toString","margin","ImageSelector","images","setImages","text","setText","handleChange","value","findImage","r","links","replace","split","catch","length","Label","onChange","Check","inline","label","CreatePost","useParams","submitted","setSubmitted","Category","posts","setPosts","post","LoggedIn","login","u","SignUp","NotLoggedIn","isSignUp","setSignUp","fail","setFail","handleSubmit","response","auth","User","setLogin","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5aa2e789.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { Nav, Navbar, Container } from 'react-bootstrap';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div>\r\n\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Container>\r\n\r\n                    <Navbar.Brand href=\"/\">Speakit</Navbar.Brand>\r\n\r\n                    <Nav className=\"me-auto\">\r\n                        <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\r\n                        <Nav.Link as={Link} to=\"/categories\">Categories</Nav.Link>\r\n                    </Nav>\r\n\r\n                </Container>\r\n            </Navbar>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import { prependOnceListener } from 'process';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Container, Card, Image, Button, Row, Col, Form } from 'react-bootstrap'\r\n\r\nconst width = {\r\n    width: 100,\r\n    padding: 10\r\n}\r\n\r\nconst Comment = (props) => {\r\n\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [item, setItem] = useState([]);\r\n\r\n    let URL = \"https://speakit-cs361.wl.r.appspot.com/comments/\"+props.id;\r\n    useEffect(() => {\r\n        fetch(URL)\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              setIsLoaded(true);\r\n              console.log(\"comment\", result)\r\n              setItem(result);\r\n            },\r\n            (error) => {\r\n              setIsLoaded(true);\r\n              setError(error);\r\n            }\r\n          )\r\n    }, [])\r\n\r\n    const deleteComment = () => {\r\n        fetch(URL, {\r\n            method: 'DELETE'\r\n        }).then(() => {\r\n            fetch(\"https://speakit-cs361.wl.r.appspot.com/posts/\"+props.parent+\"/comments\")\r\n            .then(res => res.json()\r\n                .then((result) => {\r\n                    //setIsLoaded(true);\r\n                    //console.log(result)\r\n                props.setState(result);\r\n                },\r\n                (error) => {\r\n                    //setIsLoaded(true);\r\n                    //setError(error);\r\n                }\r\n                )\r\n            )\r\n\r\n        })\r\n    };\r\n\r\n    if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n        return <div>Loading...</div>;\r\n    } else if (props.user.username == item.user) {\r\n        return (\r\n            <div>\r\n                \r\n                <Container>\r\n\r\n                    <Card>\r\n                        <Card.Text>\r\n                            <div className=\"content\">{item.user}: {item.content}</div>\r\n                            <Button variant=\"danger\" onClick={deleteComment}>Delete</Button>\r\n                        </Card.Text>\r\n                    </Card>\r\n\r\n                </Container>\r\n\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                \r\n                <Container>\r\n\r\n                    <Card>\r\n                        <Card.Text>\r\n                            <div className=\"content\">{item.user}: {item.content}</div>\r\n                        </Card.Text>\r\n                    </Card>\r\n\r\n                </Container>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Comment","import { prependOnceListener } from 'process';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Container, Card, Image, Button, Row, Col, Form } from 'react-bootstrap'\r\nimport './Post.css';\r\nimport Comment from './Comment';\r\n\r\nconst width = {\r\n    width: 100,\r\n    padding: 10\r\n}\r\n\r\nconst Post = (props) => {\r\n\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [item, setItem] = useState([]);\r\n    const [comments, setComments] = useState([]);\r\n    \r\n    let URL = props.self;\r\n    useEffect(() => {\r\n        fetch(URL)\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              setIsLoaded(true);\r\n              console.log(\"result\", result)\r\n              setItem(result);\r\n              setComments(result.comments);\r\n              console.log(\"comments\", comments)\r\n            },\r\n            (error) => {\r\n              setIsLoaded(true);\r\n              setError(error);\r\n            }\r\n          )\r\n    }, [])\r\n\r\n    const deletePost = () => {\r\n        fetch(URL, {\r\n            method: 'DELETE'\r\n        }).then(() => {\r\n            fetch(\"https://speakit-cs361.wl.r.appspot.com/categories/\" + props.category + \"/posts\")\r\n            .then(res => res.json()\r\n                .then((result) => {\r\n                    //setIsLoaded(true);\r\n                    //console.log(result)\r\n                props.setState(result);\r\n                },\r\n                (error) => {\r\n                    //setIsLoaded(true);\r\n                    //setError(error);\r\n                }\r\n                )\r\n            )\r\n\r\n        })\r\n    };\r\n\r\n    const updateUserPost = () => {\r\n        let URL = \"https://speakit-cs361.wl.r.appspot.com/users/\"+props.user.id;\r\n        fetch(URL, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(props.user)\r\n        })\r\n        .then((id) => {\r\n            \r\n            fetch(\"https://speakit-cs361.wl.r.appspot.com/posts/\"+item.id, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(item)\r\n            })\r\n            .then((obj) => {\r\n                \r\n                fetch(props.self)\r\n                .then((res) => res.json())\r\n                .then(result => {\r\n                    console.log(result)\r\n                    setItem(result)\r\n                })\r\n                \r\n            })\r\n        })\r\n    };\r\n\r\n    const like = () => {\r\n        if (props.user.liked.hasOwnProperty(item.id)) {\r\n            if (props.user.liked[item.id] == 1) {\r\n                return;\r\n            }\r\n\r\n        }\r\n\r\n        if (props.user.disliked.hasOwnProperty(item.id)) {\r\n            if (props.user.disliked[item.id] == 1) {\r\n                props.user.disliked[item.id] = 0;\r\n                item.dislikes -= 1;\r\n            }\r\n        }\r\n        \r\n        props.user.liked[item.id] = 1;\r\n        item.likes += 1;\r\n\r\n        updateUserPost();\r\n    };\r\n\r\n    const dislike = () => {\r\n        if (props.user.disliked.hasOwnProperty(item.id)) {\r\n            if (props.user.disliked[item.id] == 1) {\r\n                return;\r\n            }\r\n        }\r\n        \r\n        if (props.user.liked.hasOwnProperty(item.id)) {\r\n            if (props.user.liked[item.id] == 1) {\r\n                props.user.liked[item.id] = 0;\r\n                item.likes -= 1;\r\n            }\r\n        }\r\n        props.user.disliked[item.id] = 1;\r\n        item.dislikes += 1;\r\n\r\n        updateUserPost();\r\n    };\r\n    \r\n    const handleSubmit = (event) => {\r\n        \r\n        event.preventDefault();\r\n\r\n        const formData = new FormData(event.target),\r\n            formDataObj = Object.fromEntries(formData.entries())\r\n            formDataObj.user = props.user.username\r\n            formDataObj.parent = item.id\r\n        \r\n        let URL = \"https://speakit-cs361.wl.r.appspot.com/comments\";\r\n        fetch(URL, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(formDataObj)\r\n        }).then(() => {\r\n            fetch(\"https://speakit-cs361.wl.r.appspot.com/posts/\"+item.id+\"/comments\").then(\r\n                list => list.json()).then(result => {\r\n                    console.log(\"hey\", result)\r\n                    setComments(result)\r\n            })\r\n        });\r\n    };\r\n\r\n    if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n        return <div>Loading...</div>;\r\n    } else if (props.user.username == item.user) {\r\n        return (\r\n            <div>\r\n                \r\n                <Container>\r\n\r\n                    <Card>\r\n                        <Card.Text xs=\"1\">\r\n                            <Row>\r\n                            <Col md={{span: 2}}><Image style={width} src={item.thumbnail} thumbnail/></Col>\r\n                            <Col md={{span: 2}}><span className=\"title\">{item.title}</span></Col>\r\n                            <Col md={{span: 2, offset: 6}}><Button variant=\"danger\" onClick={deletePost}>Delete</Button></Col>\r\n\r\n                            \r\n                            </Row>\r\n                            <div className=\"content\">{item.user}: {item.content}</div>\r\n                        </Card.Text>\r\n                        <Card.Footer>\r\n                            <div>\r\n                                <Button onClick={like}>Like {item.likes}</Button>   \r\n                                <Button onClick={dislike}>Dislike {item.dislikes}</Button>\r\n\r\n                                <Form onSubmit={handleSubmit}>\r\n                                    <Form.Group>\r\n                                        <Form.Control as=\"textarea\" placeholder=\"Enter Comment\" name=\"content\"/>\r\n                                    </Form.Group>\r\n\r\n                                    <Button variant=\"primary\" type=\"submit\">Reply</Button>\r\n                                </Form>\r\n                            </div>\r\n                            \r\n                        </Card.Footer>\r\n                    </Card>\r\n\r\n                    {comments.map(comment => (\r\n                        <Col>\r\n                        <Container key={comment.id}>\r\n                            <Comment user={props.user} setUser={props.setUser} isLogin={props.isLogin} id={comment.id} self={comment.self} setState={setComments} parent={item.id}/>\r\n                        </Container>\r\n                        </Col>\r\n                    ))}\r\n\r\n                </Container>\r\n\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                \r\n                <Container>\r\n\r\n                    <Card>\r\n                        <Card.Text xs=\"1\">\r\n                            <Row>\r\n                            <Col md={{span: 2}}><Image style={width} src={item.thumbnail} thumbnail/></Col>\r\n                            <Col md={{span: 2}}><span className=\"title\">{item.title}</span></Col>\r\n\r\n                            \r\n                            </Row>\r\n                            <div className=\"content\">{item.content}</div>\r\n                        </Card.Text>\r\n                        <Card.Footer>\r\n                            <div><Button onClick={like}>Like {item.likes}</Button>   <Button onClick={dislike}>Dislike {item.dislikes}</Button></div>\r\n\r\n                        </Card.Footer>\r\n                    </Card>\r\n\r\n                    {comments.map(comment => (\r\n                        <Col>\r\n                        <Container key={comment.id}>\r\n                            <Comment user={props.user} setUser={props.setUser} isLogin={props.isLogin} id={comment.id} self={comment.self} setState={setComments} parent={item.id}/>\r\n                        </Container>\r\n                        </Col>\r\n                    ))}\r\n\r\n                </Container>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Post\r\n//\"https://i.redd.it/6zyzrsgioxv71.jpg\"","import React from 'react';\r\nimport Post from './Post'\r\n\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            <h1>Home</h1>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React, { useState, useEffect } from 'react'\r\nimport { Card, Container, Row, Col } from 'react-bootstrap'\r\nimport { Link, Route } from 'react-router-dom'\r\nimport './Categories.css';\r\n\r\nconst Categories = () => {\r\n    \r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [items, setItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://speakit-cs361.wl.r.appspot.com/categories/list\")\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              setIsLoaded(true);\r\n              console.log(result.results)\r\n              setItems(result.results);\r\n            },\r\n            (error) => {\r\n              setIsLoaded(true);\r\n              setError(error);\r\n            }\r\n          )\r\n    }, [])\r\n\r\n    \r\n    if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n        return <div>Loading...</div>;\r\n    } else {\r\n        return (\r\n\r\n            <div>\r\n                <h1>Categories</h1>\r\n                <Container>\r\n                    <Row xs md={5}>\r\n\r\n                    {items.map(item => (\r\n                        <Col>\r\n                        <Card as={Link} to={\"categories/\"+item.name.toString()} className=\"categories\" key={item.name}>\r\n                        {item.name}\r\n                        </Card>\r\n                        </Col>\r\n                    ))}\r\n\r\n                    </Row>\r\n                \r\n                </Container>\r\n                \r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Categories","import React, { useState } from 'react';\r\n//import { Link, useParams } from 'react-router-dom'\r\nimport { Button, Image, Form } from 'react-bootstrap'\r\n\r\nconst width = {\r\n    width: 100,\r\n    padding: 10,\r\n    margin: 25\r\n}\r\n\r\nconst ImageSelector = (props) => {\r\n    \r\n    const [images, setImages] = useState([])\r\n    const [text, setText] = useState(\"\")\r\n    const [error, setError] = useState(null);\r\n\r\n    const handleChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const findImage = () => {\r\n        if (text != \"\") {\r\n            let microservice = \"https://cs361scraper.herokuapp.com/image/\"+text;\r\n            fetch(microservice).then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    console.log(result)\r\n                    let r = result.links\r\n                    r = r.replace(/\\s+/g, '');\r\n                    r = r.split(\",\")\r\n                    setImages(r);\r\n                }\r\n            ).catch(error => {\r\n                console.log(error)\r\n            })\r\n        }\r\n        console.log(text)\r\n        \r\n        /*\r\n        if (text == \"\") {\r\n            setImages([\"https://i.redd.it/3dtqj9opzsy71.jpg\", \"https://i.redd.it/aa7kyg1npry71.jpg\", \"https://i.redd.it/kxts24nhzsy71.jpg\"]);\r\n        } else {\r\n            setImages([text, text, text])\r\n        }*/\r\n    };\r\n\r\n    if (images.length == 0) {\r\n        return (\r\n            <div>\r\n                <Form.Label>Pick Thumbnail</Form.Label>\r\n                <Form.Control placeholder=\"Enter Keyword\" id=\"keyword\" type=\"text\" onChange={handleChange}/>\r\n                <Button onClick={findImage} variant=\"primary\" type=\"button\">Search Images</Button>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                <Form.Label>Pick Thumbnail</Form.Label>\r\n                <Form.Control id=\"keyword\" type=\"text\" onChange={handleChange}/>\r\n                <Button onClick={findImage} variant=\"primary\" type=\"button\">Search Images</Button>  \r\n                <Form.Group>\r\n                    <Form.Check inline type=\"radio\" name=\"thumbnail\" value={images[0]} label={<Image style={width} src={images[0]} thumbnail/>}/>\r\n                    <Form.Check inline type=\"radio\" name=\"thumbnail\" value={images[1]} label={<Image style={width} src={images[1]} thumbnail/>}/>\r\n                    <Form.Check inline type=\"radio\" name=\"thumbnail\" value={images[2]} label={<Image style={width} src={images[2]} thumbnail/>}/>\r\n                    <Form.Check inline type=\"radio\" name=\"thumbnail\" value={images[3]} label={<Image style={width} src={images[3]} thumbnail/>}/>\r\n                </Form.Group>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default ImageSelector\r\n\r\n/*\r\n<Form onSubmit={findImage}>\r\n                <Form.Group>\r\n                    <Form.Label>Pick Thumbnail</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter Keyword\" name=\"keyword\"/>\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\">Search Images</Button>\r\n            </Form>*/","import React, { useState, useEffect } from 'react';\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { Button, Container, Card, Image, Form } from 'react-bootstrap'\r\nimport './CreatePost.css';\r\nimport ImageSelector from './ImageSelector'\r\n\r\nconst CreatePost = (props) => {\r\n    \r\n    let {category} = useParams();\r\n\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [images, setImages] = useState(false)\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const formData = new FormData(event.target),\r\n            formDataObj = Object.fromEntries(formData.entries())\r\n            formDataObj.category = category\r\n            formDataObj.user = props.user.username\r\n\r\n        \r\n        let URL = \"https://speakit-cs361.wl.r.appspot.com/posts\";\r\n        fetch(URL, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(formDataObj)\r\n        }).then(() => {\r\n            setSubmitted(true);\r\n        }).then(() => {\r\n            fetch(\"https://speakit-cs361.wl.r.appspot.com/categories/\" + category + \"/posts\")\r\n            .then(res => res.json()\r\n                .then((result) => {\r\n                    //setIsLoaded(true);\r\n                //console.log(result)\r\n                //props.setState(result);\r\n                },\r\n                (error) => {\r\n                    //setIsLoaded(true);\r\n                    //setError(error);\r\n                }\r\n                )\r\n            )\r\n        });\r\n    };\r\n    \r\n    \r\n\r\n    //useEffect(() => {}, [submitted])\r\n    \r\n    if (submitted) {\r\n        return (\r\n            <div>\r\n                <h1>Post Created Successfully!</h1>\r\n\r\n                <Button as={Link} to={\"/categories/\"+category}>Back to {category}</Button>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                <h1>Creating Post for {category}</h1>\r\n\r\n                <Container>\r\n                <Card className=\"CreatePost\">\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group>\r\n                            <Form.Label>Post Title</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter Title\" name=\"title\"/>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Post Content</Form.Label>\r\n                            <Form.Control as=\"textarea\" placeholder=\"Enter Content\" name=\"content\"/>\r\n                        </Form.Group>\r\n\r\n                        <ImageSelector/>\r\n\r\n                        <Button variant=\"primary\" type=\"submit\">Create Post</Button>\r\n                    </Form>\r\n                </Card>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreatePost","import React, { useState, useEffect } from 'react'\r\nimport { Button, Card, Container, Row, Col } from 'react-bootstrap'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport Post from './Post'\r\nimport CreatePost from './CreatePost'\r\nimport './Category.css';\r\n\r\nconst Category = (props) => {\r\n\r\n    let {category} = useParams();\r\n\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    let URL = \"https://speakit-cs361.wl.r.appspot.com/categories/\" + {category}.category + \"/posts\";\r\n    useEffect(() => {\r\n        fetch(URL)\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              setIsLoaded(true);\r\n              console.log(result)\r\n              setPosts(result);\r\n            },\r\n            (error) => {\r\n              setIsLoaded(true);\r\n              setError(error);\r\n            }\r\n          )\r\n    }, [])\r\n\r\n    if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n        return <div>Loading...</div>;\r\n    } else {\r\n        return (\r\n            <div>\r\n                <h1>\r\n                    Welcome to Speakit {category}!\r\n                </h1>\r\n\r\n                {posts.map(post => (\r\n                        <Col>\r\n                        <Container key={post.id}>\r\n                            <Post user={props.user} setUser={props.setUser} isLogin={props.isLogin} id={post.id} self={post.self} setState={setPosts} category={category}/>\r\n                        </Container>\r\n                        </Col>\r\n                    ))}\r\n\r\n                <Col>\r\n                <Container>\r\n\r\n                        <Button as={Link} to={category+\"/create\"} variant=\"primary\" type=\"submit\">Create Post</Button>\r\n                        {/*<CreatePost category={category} setState={setPosts}>*/}\r\n\r\n                </Container>\r\n                </Col>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Category","import React, { useState, useEffect } from 'react';\r\nimport { Container, Card, Image, Accordion, Button, Row, Col } from 'react-bootstrap'\r\n\r\nconst LoggedIn = (props) => {\r\n\r\n    if (props.user == null) {\r\n        fetch(\"https://speakit-cs361.wl.r.appspot.com/users/\"+props.login)\r\n            .then(u => u.json()).then(user => {\r\n                console.log(user)\r\n                user.id = props.login\r\n                props.setUser(user);\r\n        })\r\n    }\r\n    \r\n    if (props.user == null) {\r\n        return (\r\n            <div>Loading...</div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                <h4>Welcome {props.user.username}!</h4>\r\n\r\n                <Button variant=\"primary\" onClick={() => {props.setState(false); props.setUser({\"username\": null});}}>Logout</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoggedIn","import React, { useState, useEffect } from 'react';\r\nimport { Container, Card, Image, Accordion, Button, Row, Col, Form } from 'react-bootstrap'\r\n\r\n\r\nconst SignUp = (props) => {\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const formData = new FormData(event.target),\r\n            formDataObj = Object.fromEntries(formData.entries())\r\n        \r\n        let URL = \"https://speakit-cs361.wl.r.appspot.com/users\";\r\n        fetch(URL, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(formDataObj)\r\n        }).then(id => {\r\n            console.log(id.id)\r\n            props.setState(id);\r\n        })\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Card>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group>\r\n                            <Form.Control type=\"text\" placeholder=\"Username\" name=\"username\"/>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\"/>\r\n                        </Form.Group>\r\n\r\n                        <Button variant=\"primary\" type=\"submit\">Sign Up</Button>\r\n                    </Form>\r\n                </Card>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp","import React, { useState, useEffect } from 'react';\r\nimport { Container, Card, Image, Accordion, Button, Row, Col, Form } from 'react-bootstrap'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport SignUp from './SignUp';\r\n\r\nconst NotLoggedIn = (props) => {\r\n\r\n    const [isSignUp, setSignUp] = useState(false);\r\n    const [fail, setFail] = useState(false);\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const formData = new FormData(event.target),\r\n            formDataObj = Object.fromEntries(formData.entries())\r\n        \r\n        let URL = \"https://speakit-cs361.wl.r.appspot.com/users/login\";\r\n        fetch(URL, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(formDataObj)\r\n        }).then((res) => res.json()).then(response => {\r\n            console.log(response)\r\n            if (response.auth) {\r\n                props.setState(response.id);\r\n            } else {\r\n                setFail(true);\r\n            }\r\n        })\r\n    };\r\n\r\n    if (isSignUp) {\r\n        return (\r\n            <div>\r\n                <SignUp setState={props.setState}/>\r\n            </div>\r\n        )\r\n    } else if (fail) {\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <Card>\r\n                        <h4>Incorrect username/password</h4>\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Form.Group>\r\n                                <Form.Control type=\"text\" placeholder=\"Username\" name=\"username\"/>\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\"/>\r\n                            </Form.Group>\r\n\r\n                            <Button variant=\"primary\" type=\"submit\">Log In</Button>\r\n                        </Form>\r\n\r\n                        <Button variant=\"primary\" onClick={() => setSignUp(true)}>Sign Up</Button>\r\n                    </Card>\r\n                </Container>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <Card>\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Form.Group>\r\n                                <Form.Control type=\"text\" placeholder=\"Username\" name=\"username\"/>\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\"/>\r\n                            </Form.Group>\r\n\r\n                            <Button variant=\"primary\" type=\"submit\">Log In</Button>\r\n                        </Form>\r\n\r\n                        <Button variant=\"primary\" onClick={() => setSignUp(true)}>Sign Up</Button>\r\n                    </Card>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default NotLoggedIn","import React, { useState, useEffect } from 'react';\r\nimport { Container, Card, Image, Accordion, Button, Row, Col } from 'react-bootstrap'\r\nimport './User.css';\r\nimport LoggedIn from './LoggedIn';\r\nimport NotLoggedIn from './NotLoggedIn';\r\n\r\nconst width = {\r\n    width: 100,\r\n    padding: 10\r\n}\r\n\r\nconst User = (props) => {\r\n\r\n    if (props.isLogin) {\r\n        return (\r\n            <div style={width}>\r\n                <LoggedIn user={props.user} setUser={props.setUser} login={props.isLogin} setState={props.setLogin}/>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                <NotLoggedIn setState={props.setLogin}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default User","import './App.css';\r\nimport qs from 'qs'\r\nimport Header from './Header'\r\nimport Home from './Home'\r\nimport Categories from './Categories'\r\nimport Category from './Category'\r\nimport CreatePost from './CreatePost'\r\nimport User from './User';\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport { Card, Container, Row, Col } from 'react-bootstrap'\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst App = () => {\r\n   \r\n    const [isLogin, setLogin] = useState(false)\r\n    const [user, setUser] = useState({\"username\": null})\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n\r\n                <Row className=\"show-grid\">\r\n                    <Col xs={2} md={4}>\r\n                        <User user={user} setUser={setUser} isLogin={isLogin} setLogin={setLogin}/>\r\n                    </Col>\r\n                    <Col xs={10} md={8}>\r\n                        <Switch>\r\n                            <Route path='/categories/:category/create'>\r\n                                <CreatePost user={user} setUser={setUser} isLogin={isLogin}/>\r\n                            </Route>\r\n                            <Route path='/categories/:category'>\r\n                                <Category user={user} setUser={setUser} isLogin={isLogin}/>\r\n                            </Route>\r\n                            <Route path='/categories'>\r\n                                <Categories user={user} setUser={setUser} isLogin={isLogin}/>\r\n                            </Route>\r\n                            <Route path='/'>\r\n                                <Home />\r\n                            </Route>\r\n                        </Switch>\r\n                    </Col>\r\n                </Row>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}