{"version":3,"sources":["Header.js","Post.js","Home.js","Categories.js","ImageSelector.js","CreatePost.js","Category.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Navbar","bg","variant","Container","Brand","href","Nav","className","Link","as","to","width","padding","Post","props","useState","error","setError","isLoaded","setIsLoaded","item","setItem","URL","self","useEffect","fetch","then","res","json","result","console","log","message","Card","Text","xs","Row","Col","md","span","Image","style","src","thumbnail","title","offset","Button","onClick","method","category","setState","content","Footer","likes","dislikes","Home","Categories","items","setItems","results","map","name","toString","margin","ImageSelector","images","setImages","text","setText","handleChange","event","target","value","findImage","link","length","Form","Label","Control","id","type","onChange","Group","Check","inline","label","CreatePost","useParams","submitted","setSubmitted","onSubmit","preventDefault","formData","FormData","formDataObj","Object","fromEntries","entries","headers","body","JSON","stringify","placeholder","Category","posts","setPosts","post","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a447e58c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { Nav, Navbar, Container } from 'react-bootstrap';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div>\r\n\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Container>\r\n\r\n                    <Navbar.Brand href=\"/\">Speakit</Navbar.Brand>\r\n\r\n                    <Nav className=\"me-auto\">\r\n                        <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\r\n                        <Nav.Link as={Link} to=\"/categories\">Categories</Nav.Link>\r\n                    </Nav>\r\n\r\n                </Container>\r\n            </Navbar>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React, { useState, useEffect } from 'react';\r\nimport { Container, Card, Image, Accordion, Button, Row, Col } from 'react-bootstrap'\r\nimport './Post.css';\r\n\r\nconst width = {\r\n    width: 100,\r\n    padding: 10\r\n}\r\n\r\nconst Post = (props) => {\r\n\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [item, setItem] = useState([]);\r\n\r\n    let URL = props.self;\r\n    useEffect(() => {\r\n        fetch(URL)\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              setIsLoaded(true);\r\n              console.log(result)\r\n              setItem(result);\r\n            },\r\n            (error) => {\r\n              setIsLoaded(true);\r\n              setError(error);\r\n            }\r\n          )\r\n    }, [])\r\n\r\n    const deletePost = () => {\r\n        fetch(URL, {\r\n            method: 'DELETE'\r\n        }).then(() => {\r\n            fetch(\"https://speakit-cs361.wl.r.appspot.com/categories/\" + props.category + \"/posts\")\r\n            .then(res => res.json()\r\n                .then((result) => {\r\n                    //setIsLoaded(true);\r\n                //console.log(result)\r\n                props.setState(result);\r\n                },\r\n                (error) => {\r\n                    //setIsLoaded(true);\r\n                    //setError(error);\r\n                }\r\n                )\r\n            )\r\n\r\n        })\r\n    };\r\n    \r\n    if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n        return <div>Loading...</div>;\r\n    } else {\r\n        return (\r\n            <div>\r\n                \r\n                <Container>\r\n\r\n                    <Card>\r\n                        <Card.Text xs=\"1\">\r\n                            <Row>\r\n                            <Col md={{span: 2}}><Image style={width} src={item.thumbnail} thumbnail/></Col>\r\n                            <Col md={{span: 2}}><span className=\"title\">{item.title}</span></Col>\r\n                            <Col md={{span: 2, offset: 6}}><Button variant=\"danger\" onClick={deletePost}>Delete</Button></Col>\r\n\r\n                            \r\n                            </Row>\r\n                            <div className=\"content\">{item.content}</div>\r\n                        </Card.Text>\r\n                        <Card.Footer>\r\n                            <div>Likes {item.likes}   Dislikes {item.dislikes}</div>\r\n\r\n                        </Card.Footer>\r\n                    </Card>\r\n\r\n                </Container>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Post\r\n//\"https://i.redd.it/6zyzrsgioxv71.jpg\"","import React from 'react';\r\nimport Post from './Post'\r\n\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            <h1>Home</h1>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React, { useState, useEffect } from 'react'\r\nimport { Card, Container, Row, Col } from 'react-bootstrap'\r\nimport { Link, Route } from 'react-router-dom'\r\nimport './Categories.css';\r\n\r\nconst Categories = () => {\r\n    \r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [items, setItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://speakit-cs361.wl.r.appspot.com/categories/list\")\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              setIsLoaded(true);\r\n              console.log(result.results)\r\n              setItems(result.results);\r\n            },\r\n            (error) => {\r\n              setIsLoaded(true);\r\n              setError(error);\r\n            }\r\n          )\r\n    }, [])\r\n\r\n    \r\n    if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n        return <div>Loading...</div>;\r\n    } else {\r\n        return (\r\n\r\n            <div>\r\n                <h1>Categories</h1>\r\n                <Container>\r\n                    <Row xs md={5}>\r\n\r\n                    {items.map(item => (\r\n                        <Col>\r\n                        <Card as={Link} to={\"categories/\"+item.name.toString()} className=\"categories\" key={item.name}>\r\n                        {item.name}\r\n                        </Card>\r\n                        </Col>\r\n                    ))}\r\n\r\n                    </Row>\r\n                \r\n                </Container>\r\n                \r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Categories","import React, { useState, useEffect } from 'react';\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { Button, Container, Card, Image, Form } from 'react-bootstrap'\r\n\r\nconst width = {\r\n    width: 100,\r\n    padding: 10,\r\n    margin: 25\r\n}\r\n\r\nconst ImageSelector = (props) => {\r\n    \r\n    const [images, setImages] = useState([])\r\n    const [text, setText] = useState(\"\")\r\n\r\n    const handleChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const findImage = () => {\r\n        if (text != \"\") {\r\n            let microservice = \"https://cs361scraper.herokuapp.com/image/\"+text\r\n            fetch(microservice).then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setImages(result.link)\r\n                }\r\n            )\r\n        }\r\n        console.log(text)\r\n        \r\n        /*\r\n        if (text == \"\") {\r\n            setImages([\"https://i.redd.it/3dtqj9opzsy71.jpg\", \"https://i.redd.it/aa7kyg1npry71.jpg\", \"https://i.redd.it/kxts24nhzsy71.jpg\"]);\r\n        } else {\r\n            setImages([text, text, text])\r\n        }*/\r\n    };\r\n\r\n    if (images.length == 0) {\r\n        return (\r\n            <div>\r\n                <Form.Label>Pick Thumbnail</Form.Label>\r\n                <Form.Control id=\"keyword\" type=\"text\" onChange={handleChange}/>\r\n                <Button onClick={findImage} variant=\"primary\" type=\"button\">Search Images</Button>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                <Form.Label>Pick Thumbnail</Form.Label>\r\n                <Form.Control id=\"keyword\" type=\"text\" onChange={handleChange}/>\r\n                <Button onClick={findImage} variant=\"primary\" type=\"button\">Search Images</Button>  \r\n            <Form.Group>\r\n                <Form.Check inline type=\"radio\" name=\"thumbnail\" value={images} label={<Image style={width} src={images} thumbnail/>}/>\r\n            </Form.Group>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default ImageSelector\r\n\r\n/*\r\n<Form onSubmit={findImage}>\r\n                <Form.Group>\r\n                    <Form.Label>Pick Thumbnail</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter Keyword\" name=\"keyword\"/>\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\">Search Images</Button>\r\n            </Form>*/","import React, { useState, useEffect } from 'react';\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { Button, Container, Card, Image, Form } from 'react-bootstrap'\r\nimport './CreatePost.css';\r\nimport ImageSelector from './ImageSelector'\r\n\r\nconst CreatePost = (props) => {\r\n    \r\n    let {category} = useParams();\r\n\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [images, setImages] = useState(false)\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const formData = new FormData(event.target),\r\n            formDataObj = Object.fromEntries(formData.entries())\r\n            formDataObj.category = category\r\n\r\n        \r\n        let URL = \"https://speakit-cs361.wl.r.appspot.com/posts\";\r\n        fetch(URL, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(formDataObj)\r\n        }).then(() => {\r\n            setSubmitted(true);\r\n        }).then(() => {\r\n            fetch(\"https://speakit-cs361.wl.r.appspot.com/categories/\" + category + \"/posts\")\r\n            .then(res => res.json()\r\n                .then((result) => {\r\n                    //setIsLoaded(true);\r\n                //console.log(result)\r\n                //props.setState(result);\r\n                },\r\n                (error) => {\r\n                    //setIsLoaded(true);\r\n                    //setError(error);\r\n                }\r\n                )\r\n            )\r\n        });\r\n    };\r\n    \r\n    \r\n\r\n    //useEffect(() => {}, [submitted])\r\n    \r\n    if (submitted) {\r\n        return (\r\n            <div>\r\n                <h1>Post Created Successfully!</h1>\r\n\r\n                <Button as={Link} to={\"/categories/\"+category}>Back to {category}</Button>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                <h1>Creating Post for {category}</h1>\r\n\r\n                <Container>\r\n                <Card className=\"CreatePost\">\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group>\r\n                            <Form.Label>Post Title</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter Title\" name=\"title\"/>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Post Content</Form.Label>\r\n                            <Form.Control as=\"textarea\" placeholder=\"Enter Content\" name=\"content\"/>\r\n                        </Form.Group>\r\n\r\n                        <ImageSelector/>\r\n\r\n                        <Button variant=\"primary\" type=\"submit\">Create Post</Button>\r\n                    </Form>\r\n                </Card>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreatePost","import React, { useState, useEffect } from 'react'\r\nimport { Button, Card, Container, Row, Col } from 'react-bootstrap'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport Post from './Post'\r\nimport CreatePost from './CreatePost'\r\nimport './Category.css';\r\n\r\nconst Category = () => {\r\n\r\n    let {category} = useParams();\r\n\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    let URL = \"https://speakit-cs361.wl.r.appspot.com/categories/\" + {category}.category + \"/posts\";\r\n    useEffect(() => {\r\n        fetch(URL)\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              setIsLoaded(true);\r\n              console.log(result)\r\n              setPosts(result);\r\n            },\r\n            (error) => {\r\n              setIsLoaded(true);\r\n              setError(error);\r\n            }\r\n          )\r\n    }, [])\r\n\r\n    if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n        return <div>Loading...</div>;\r\n    } else {\r\n        return (\r\n            <div>\r\n                <h1>\r\n                    Welcome to Speakit {category}!\r\n                </h1>\r\n\r\n                {posts.map(post => (\r\n                        <Col>\r\n                        <Container key={post.id}>\r\n                            <Post id={post.id} self={post.self} setState={setPosts} category={category}/>\r\n                        </Container>\r\n                        </Col>\r\n                    ))}\r\n\r\n                <Col>\r\n                <Container>\r\n\r\n                        <Button as={Link} to={category+\"/create\"} variant=\"primary\" type=\"submit\">Create Post</Button>\r\n                        {/*<CreatePost category={category} setState={setPosts}>*/}\r\n\r\n                </Container>\r\n                </Col>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Category","import './App.css';\r\nimport Header from './Header'\r\nimport Home from './Home'\r\nimport Categories from './Categories'\r\nimport Category from './Category'\r\nimport CreatePost from './CreatePost'\r\nimport React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport { Card, Container, Row, Col } from 'react-bootstrap'\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div>\r\n            <Header />\r\n\r\n\r\n                <Row className=\"show-grid\">\r\n                    <Col xs={2} md={4}></Col>\r\n                    <Col xs={10} md={8}>\r\n                        <Switch>\r\n                            <Route path='/categories/:category/create'>\r\n                                <CreatePost />\r\n                            </Route>\r\n                            <Route path='/categories/:category'>\r\n                                <Category />\r\n                            </Route>\r\n                            <Route path='/categories'>\r\n                                <Categories />\r\n                            </Route>\r\n                            <Route path='/'>\r\n                                <Home />\r\n                            </Route>\r\n                        </Switch>\r\n                    </Col>\r\n                </Row>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}